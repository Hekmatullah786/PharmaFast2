<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ExpenseID.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="ExpenseReason.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Amount.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="ExDate.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>